@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.card-gradient {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.bitcoin-gradient {
  background: linear-gradient(135deg, #f7931a 0%, #ff6b35 100%);
}

/* Custom animations for the background */
@keyframes float {
  0%, 100% { 
    transform: translateY(0px) rotate(0deg); 
    opacity: 0.3;
  }
  50% { 
    transform: translateY(-20px) rotate(5deg); 
    opacity: 0.6;
  }
}

@keyframes orbit {
  0% { 
    transform: rotate(0deg) translateX(50px) rotate(0deg); 
  }
  100% { 
    transform: rotate(360deg) translateX(50px) rotate(-360deg); 
  }
}

@keyframes twinkle {
  0%, 100% { 
    opacity: 0; 
    transform: scale(0.5) translateY(0px); 
  }
  50% { 
    opacity: 1; 
    transform: scale(1.2) translateY(-10px); 
  }
}

@keyframes gridMove {
  0% { 
    transform: translate(0, 0); 
  }
  100% { 
    transform: translate(50px, 50px); 
  }
}

/* 3D Card Styles */
.perspective-1000 {
  perspective: 1000px;
}

.card-3d {
  position: relative;
  width: 100%;
  height: 200px;
  transform-style: preserve-3d;
  transition: transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  cursor: pointer;
}

.card-3d:hover {
  transform: translateY(-10px) rotateX(5deg);
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 12px;
  overflow: hidden;
}

.card-front {
  z-index: 2;
}

.card-back {
  transform: rotateY(180deg);
}

.card-3d.flipped {
  transform: rotateY(180deg);
}

/* Enhanced card gradient with shimmer effect */
.card-gradient {
  background: linear-gradient(135deg, 
    #667eea 0%, 
    #764ba2 25%, 
    #f093fb 50%, 
    #f5576c 75%, 
    #4facfe 100%);
  background-size: 400% 400%;
  animation: gradientShift 8s ease infinite;
  position: relative;
}

.card-gradient::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.2), 
    transparent);
  animation: shimmer 3s infinite;
}

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Holographic effect */
.card-gradient::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, 
    transparent 30%, 
    rgba(255, 255, 255, 0.1) 50%, 
    transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.card-3d:hover .card-gradient::after {
  opacity: 1;
}

/* Animated Background Grid Animations */
@keyframes grid-move {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(80px, 80px);
  }
}

@keyframes grid-move-reverse {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-120px, -120px);
  }
}

@keyframes grid-pulse {
  0%, 100% {
    opacity: 0.08;
    transform: scale(1);
  }
  50% {
    opacity: 0.15;
    transform: scale(1.02);
  }
}

@keyframes float-slow {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  25% {
    transform: translateY(-20px) translateX(10px);
  }
  50% {
    transform: translateY(-10px) translateX(20px);
  }
  75% {
    transform: translateY(-30px) translateX(5px);
  }
}

@keyframes float-medium {
  0%, 100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-15px) translateX(-10px) rotate(120deg);
  }
  66% {
    transform: translateY(-25px) translateX(15px) rotate(240deg);
  }
}

@keyframes float-fast {
  0%, 100% {
    transform: translateY(0px) translateX(0px) scale(1);
  }
  50% {
    transform: translateY(-40px) translateX(-20px) scale(1.1);
  }
}

@keyframes float-reverse {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  50% {
    transform: translateY(25px) translateX(-15px);
  }
}

@keyframes twinkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.5);
  }
}

@keyframes ray-move-1 {
  0% {
    left: -2px;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    left: 100%;
    opacity: 0;
  }
}

@keyframes ray-move-2 {
  0% {
    left: -2px;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    left: 100%;
    opacity: 0;
  }
}

@keyframes ray-move-3 {
  0% {
    left: -2px;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    left: 100%;
    opacity: 0;
  }
}

/* Animation Classes */
.animate-grid-move {
  animation: grid-move 20s linear infinite;
}

.animate-grid-move-reverse {
  animation: grid-move-reverse 25s linear infinite;
}

.animate-grid-pulse {
  animation: grid-pulse 8s ease-in-out infinite;
}

.animate-float-slow {
  animation: float-slow 12s ease-in-out infinite;
}

.animate-float-medium {
  animation: float-medium 8s ease-in-out infinite;
}

.animate-float-fast {
  animation: float-fast 6s ease-in-out infinite;
}

.animate-float-reverse {
  animation: float-reverse 10s ease-in-out infinite;
}

.animate-twinkle {
  animation: twinkle 4s ease-in-out infinite;
}

.animate-ray-move-1 {
  animation: ray-move-1 15s linear infinite;
}

.animate-ray-move-2 {
  animation: ray-move-2 18s linear infinite;
  animation-delay: 5s;
}

.animate-ray-move-3 {
  animation: ray-move-3 22s linear infinite;
  animation-delay: 10s;
}

/* Modern Futuristic Animations */
@keyframes neural-pulse {
  0%, 100% {
    opacity: 0.3;
    filter: brightness(1);
  }
  50% {
    opacity: 0.8;
    filter: brightness(1.5);
  }
}

@keyframes node-glow {
  0%, 100% {
    filter: brightness(1) drop-shadow(0 0 2px currentColor);
  }
  50% {
    filter: brightness(1.5) drop-shadow(0 0 8px currentColor);
  }
}

@keyframes geometric-spin {
  0% {
    transform: rotate(0deg) scale(1);
    opacity: 0.3;
  }
  50% {
    transform: rotate(180deg) scale(1.1);
    opacity: 0.6;
  }
  100% {
    transform: rotate(360deg) scale(1);
    opacity: 0.3;
  }
}

@keyframes geometric-spin-reverse {
  0% {
    transform: rotate(0deg) scale(1);
    opacity: 0.4;
  }
  50% {
    transform: rotate(-180deg) scale(0.9);
    opacity: 0.7;
  }
  100% {
    transform: rotate(-360deg) scale(1);
    opacity: 0.4;
  }
}

@keyframes geometric-float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
    opacity: 0.3;
  }
  25% {
    transform: translateY(-20px) rotate(90deg);
    opacity: 0.6;
  }
  50% {
    transform: translateY(-10px) rotate(180deg);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-30px) rotate(270deg);
    opacity: 0.5;
  }
}

@keyframes geometric-pulse {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    opacity: 0.3;
    border-width: 1px;
  }
  50% {
    transform: scale(1.2) rotate(45deg);
    opacity: 0.7;
    border-width: 2px;
  }
}

@keyframes matrix-rain {
  0% {
    transform: translateY(-100vh);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

@keyframes data-float {
  0%, 100% {
    transform: translateY(0px) translateX(0px) scale(1);
    opacity: 0.4;
  }
  25% {
    transform: translateY(-30px) translateX(20px) scale(1.2);
    opacity: 0.8;
  }
  50% {
    transform: translateY(-60px) translateX(-10px) scale(0.8);
    opacity: 0.6;
  }
  75% {
    transform: translateY(-40px) translateX(30px) scale(1.1);
    opacity: 0.9;
  }
}

@keyframes scan-horizontal {
  0% {
    top: -2px;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    top: 100%;
    opacity: 0;
  }
}

@keyframes scan-vertical {
  0% {
    left: -2px;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    left: 100%;
    opacity: 0;
  }
}

@keyframes hologram {
  0%, 100% {
    opacity: 0.05;
    transform: skewX(0deg);
  }
  25% {
    opacity: 0.1;
    transform: skewX(1deg);
  }
  50% {
    opacity: 0.08;
    transform: skewX(-0.5deg);
  }
  75% {
    opacity: 0.12;
    transform: skewX(0.8deg);
  }
}

/* Animation Classes */
.animate-neural-pulse {
  animation: neural-pulse 4s ease-in-out infinite;
}

.animate-node-glow {
  animation: node-glow 3s ease-in-out infinite;
}

.animate-geometric-spin {
  animation: geometric-spin 15s linear infinite;
}

.animate-geometric-spin-reverse {
  animation: geometric-spin-reverse 12s linear infinite;
}

.animate-geometric-float {
  animation: geometric-float 8s ease-in-out infinite;
}

.animate-geometric-pulse {
  animation: geometric-pulse 6s ease-in-out infinite;
}

.animate-matrix-rain {
  animation: matrix-rain 6s linear infinite;
}

.animate-data-float {
  animation: data-float 10s ease-in-out infinite;
}

.animate-scan-horizontal {
  animation: scan-horizontal 8s linear infinite;
}

.animate-scan-vertical {
  animation: scan-vertical 12s linear infinite;
}

.animate-hologram {
  animation: hologram 20s ease-in-out infinite;
}

/* RainbowKit Dark Theme Customization */
[data-rk] {
  --rk-colors-modalBackground: rgb(31, 41, 55) !important;
  --rk-colors-modalBorder: rgb(75, 85, 99) !important;
  --rk-colors-generalBorder: rgb(75, 85, 99) !important;
  --rk-colors-actionButtonBorder: rgb(75, 85, 99) !important;
  --rk-colors-actionButtonSecondaryBackground: rgb(55, 65, 81) !important;
  --rk-colors-closeButton: rgb(156, 163, 175) !important;
  --rk-colors-closeButtonBackground: rgb(55, 65, 81) !important;
  --rk-colors-connectButtonBackground: rgb(249, 115, 22) !important;
  --rk-colors-connectButtonText: white !important;
  --rk-colors-error: rgb(248, 113, 113) !important;
  --rk-colors-generalBorderDim: rgb(55, 65, 81) !important;
  --rk-colors-menuItemBackground: rgb(55, 65, 81) !important;
  --rk-colors-modalBackdrop: rgba(0, 0, 0, 0.8) !important;
  --rk-colors-profileAction: rgb(55, 65, 81) !important;
  --rk-colors-profileActionHover: rgb(75, 85, 99) !important;
  --rk-colors-profileForeground: rgb(31, 41, 55) !important;
  --rk-colors-selectedOptionBorder: rgb(249, 115, 22) !important;
  --rk-colors-standby: rgb(156, 163, 175) !important;
}

/* Custom RainbowKit button styling */
[data-rk] button[data-testid="rk-connect-button"] {
  background: linear-gradient(135deg, #f97316 0%, #ff6b35 100%) !important;
  border: none !important;
  border-radius: 0.75rem !important;
  font-weight: 600 !important;
  transition: all 0.2s ease !important;
}

[data-rk] button[data-testid="rk-connect-button"]:hover {
  transform: scale(1.02) !important;
  box-shadow: 0 10px 25px rgba(249, 115, 22, 0.3) !important;
}